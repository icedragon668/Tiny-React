{"version":3,"sources":["components/Header.js","components/Kudos.js","components/Body.js","components/Footer.js","components/Options.js","components/Modal.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","href","Component","Kudos","props","Fragment","data","map","toname","kudos","username","Body","type","id","onClick","handleModal","components_Kudos","Footer","Options","_ref","users","value","Modal","handleClose","handleSubmit","show","error","showHideClassName","role","components_Options","data-dismiss","App","state","modal","getKudos","$","get","then","_this","setState","getUsers","console","log","length","i","componentDidMount","sendKudos","e","document","getElementById","userOpt","options","selectedIndex","f","toOpt","kudo","post","preventDefault","this","components_Modal","components_Header","components_Body","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.987996a2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n            <div className=\"col-12\">\r\n                <h2>\r\n                    Kudos are candy not compliments\r\n                    <span className=\"right\" href=\"#\">Home</span>\r\n                </h2>\r\n\r\n                <hr/>\r\n            </div>\r\n        </div>\r\n        );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Kudos = (props) => {\r\n    return (\r\n        <>\r\n    <h2>Kudos</h2>\r\n\r\n    {\r\n    props.data.map(data => (\r\n    <div className=\"card\">\r\n        <h4>To: {data.toname}</h4>\r\n        <div className=\"card-body\">\r\n        <h5>{data.kudos}</h5>\r\n        </div>\r\n        <div className=\"card-footer\">\r\n        <h5>From: {data.username}</h5>\r\n        </div>\r\n    </div>\r\n    ))}\r\n</>\r\n)}\r\n\r\nexport default Kudos;\r\n","import React from 'react';\r\nimport Kudos from \"./Kudos\"\r\n\r\n\r\nconst Body = (props) => {   \r\n    return(\r\n            <div className=\"row\">\r\n            <div className=\"col-md-3\">\r\n                <form className=\"form-inline my-2 my-lg-0\">\r\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\" id=\"submit\" onClick={props.handleModal}>Give 'em A Kudo!</button>\r\n                </form>\r\n            </div>\r\n            <div className=\"col-md-9\">\r\n            <Kudos data={props.data} />\r\n            </div>\r\n        </div>\r\n        )}\r\n\r\nexport default Body;\r\n","import React, { Component } from 'react';\r\n\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n            <div className=\"col-12 card-body\">\r\n            <hr/>\r\n                <p>\r\ncopyright\r\n                </p>\r\n\r\n                \r\n            </div>\r\n        </div>\r\n        );\r\n  }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nconst Options = ({\r\n    users\r\n}) => {\r\n    return (\r\n        <>\r\n            {\r\n                users.map((users) => {\r\n                    return (\r\n                        <option value={users}>{users}</option>\r\n                    )\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default Options;","import React from 'react';\r\nimport Options from \"./Options\"\r\n\r\nconst Modal = ({ handleClose, handleSubmit, show, error, users }) => {\r\n    const showHideClassName = show ? \"modal display-block\" : \"modal display-none\"\r\n\r\n    return (\r\n        <>\r\n            {error ?\r\n                <div className=\"container\">\r\n                    <div id=\"error\" className=\"alert alert-danger\">ya'll dun fetgitt'd sum'tng</div>\r\n                    <table className=\"table table-hover\">\r\n                    </table>\r\n                    <button type=\"button\" className=\"close\" onClick={handleClose}>\r\n                RETURN\r\n            </button>\r\n                </div> :\r\n                <div id=\"myModal\" className={showHideClassName} role=\"dialog\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h2 className=\"modal-title\" id=\"exampleModalLabel\"><strong>Kudos</strong></h2>\r\n                            </div>\r\n                            <div className=\"modal-body\" id=\"kudosEntry\">\r\n                                <form className=\"row justify-content-center\">\r\n                                    <select className=\"col-8\" id=\"userOpt\">\r\n                                    <Options users={users}/>\r\n                                    </select>\r\n                                    <textarea className=\"col-10\" id=\"kudo\"></textarea>\r\n                                    <select className=\"col-8\" id=\"toOpt\">\r\n                                    <Options users={users}/>\r\n                                    </select>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-success\" data-dismiss=\"modal\" id=\"kudosSend\" onClick={handleSubmit}>Kudos for\r\n                        You!</button>\r\n                                <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\" onClick={handleClose}>No Kudos</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Body from './components/Body';\nimport Footer from './components/Footer';\nimport $ from \"axios\"\nimport Modal from './components/Modal';\n\nconst data1 = [\n  {\n    username: \"bob\",\n    kudos: \"kudos to you!\",\n    toname: \"george\"\n  },\n  {\n    username: \"bob1\",\n    kudos: \"kudos1 to you!\",\n    toname: \"george1\"\n  },\n  {\n    username: \"bob2\",\n    kudos: \"kudos2 to you!\",\n    toname: \"george2\"\n  }\n]\n\nclass App extends Component {\n  state = {\n    modal: false,\n    error: false,\n    data: [],\n    users : []\n  }\n\n  getKudos = () => {\n    $.get(`api/kudos`)\n      .then((data) => {\n        this.setState({data:data.data})\n      })\n  }\n\n  getUsers = () => {\n    let users = ['']\n    $.get(`api/users`)\n      .then((data) => {\n        console.log(data)\n        if (data.data.length !== 0) {\n        for (let i = 0; i < data.data.length; i++) {\n          users[i] = data.data[i].username\n        } this.setState({ users: users})\n       } else {\n          for (let i = 0; i < this.state.data.length; i++) {\n            users[i] = this.state.data[i].username\n        }\n        this.setState({ users: users})\n      }})\n  }\n\n  componentDidMount = () => {\n    this.getKudos()\n    this.getUsers()\n\n  }\n\n\n  sendKudos = () => {\n    let e = document.getElementById(\"userOpt\");\n    let userOpt = e.options[e.selectedIndex].value;\n    let f = document.getElementById(\"userOpt\");\n    let toOpt = f.options[f.selectedIndex].value;\n    let kudo = document.getElementById(\"kudo\").value;\n    \n    if (userOpt && toOpt) {\n      const kudos = {\n        kudos: kudo,\n        username: userOpt,\n        toname: toOpt\n      }\n      $.post(`api/kudos`, kudos)\n        .then(() => {\n          // document.getElementById('kudos').val('');\n          // document.getElementById('userOpt').val('');\n          // document.getElementById('toOpt').val('');\n          this.getKudos()\n        })\n    }\n  }\n\n  handleModal = (e) => {\n    e.preventDefault()\n    this.setState({\n      modal: true\n    })\n  }\n\n  handleClose = (e) => {\n    e.preventDefault()\n    this.setState({\n      modal: false\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.sendKudos()\n    this.setState({\n      modal: false,\n      error: false\n    })\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.modal ?\n          <Modal \n          handleClose={this.handleClose}\n          handleSubmit={this.handleSubmit}\n          show={this.state.modal}\n          error={this.state.error}\n          users={this.state.users}\n          /> :\n                    <>\n                    <div className=\"container\">\n                      <Header />\n                      <Body\n                        data={this.state.data}\n                        handleModal={this.handleModal}\n                        show={this.state.modal}\n                        error={this.state.error} />\n                    </div>\n                    <div className=\"container\">\n                      <Footer />\n                    </div> </> }\n\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}